
import React from 'react';
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
} from '@/components/ui/dialog';
import { ScrollArea } from '@/components/ui/scroll-area';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';
import { Skeleton } from '@/components/ui/skeleton';
import { usePostEditHistory } from '@/hooks/forum/topic/usePostEditHistory';
import { ForumPostEditHistoryEntry } from '@/types/forum';
import { formatDistanceToNow } from 'date-fns';
import { Separator } from '@/components/ui/separator'; // Added Separator
import RichTextEditor from '@/components/news/editor/RichTextEditor'; // Re-using RichTextEditor for read-only display
import { createSafeHtml } from '@/utils/htmlSanitizer';

interface PostEditHistoryDialogProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
  postId: string | null;
  postTitle?: string; // Optional: to display in the dialog title
}

const PostEditHistoryDialog: React.FC<PostEditHistoryDialogProps> = ({
  open,
  onOpenChange,
  postId,
  postTitle,
}) => {
  const { data: historyEntries, isLoading, error } = usePostEditHistory(postId);

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="sm:max-w-2xl max-h-[80vh] flex flex-col">
        <DialogHeader>
          <DialogTitle>Edit History {postTitle ? `for "${postTitle}"` : 'for Post'}</DialogTitle>
          <DialogDescription>
            Showing previous versions of the post content.
          </DialogDescription>
        </DialogHeader>
        <ScrollArea className="flex-grow pr-6 -mr-6"> {/* Added pr-6 and -mr-6 for scrollbar padding */}
          {isLoading && (
            <div className="space-y-4 p-4">
              {[...Array(3)].map((_, i) => (
                <div key={i} className="space-y-2">
                  <Skeleton className="h-4 w-1/4" />
                  <Skeleton className="h-16 w-full" />
                </div>
              ))}
            </div>
          )}
          {error && <p className="text-red-500 p-4">Error loading history: {error.message}</p>}
          {!isLoading && !error && historyEntries && historyEntries.length === 0 && (
            <p className="text-muted-foreground p-4">No edit history found for this post.</p>
          )}
          {!isLoading && !error && historyEntries && historyEntries.length > 0 && (
            <div className="space-y-6 p-1"> {/* Reduced p-4 to p-1 */}
              {historyEntries.map((entry, index) => (
                <React.Fragment key={entry.id}>
                  <div className="space-y-2">
                    <div className="flex items-center gap-2 text-sm text-muted-foreground">
                      <Avatar className="h-6 w-6">
                        <AvatarImage src={entry.profile?.profile_picture || undefined} alt={entry.profile?.display_name || entry.profile?.username || 'User'} />
                        <AvatarFallback>
                          {(entry.profile?.display_name?.[0] || entry.profile?.username?.[0] || 'U').toUpperCase()}
                        </AvatarFallback>
                      </Avatar>
                      <span>
                        Edited by <strong>{entry.profile?.display_name || entry.profile?.username || 'Unknown User'}</strong>
                      </span>
                      <span>â€¢</span>
                      <span>{formatDistanceToNow(new Date(entry.edited_at), { addSuffix: true })}</span>
                    </div>
                    <div className="prose prose-sm dark:prose-invert max-w-none p-3 border rounded-md bg-gray-50 dark:bg-gray-800/50">
                       {/* Using dangerouslySetInnerHTML as content is HTML. Ensure it's sanitized if coming from untrusted sources.
                           For content generated by our own RichTextEditor, this should be fine.
                       */}
                      <div dangerouslySetInnerHTML={createSafeHtml(entry.old_content)} />
                    </div>
                  </div>
                  {index < historyEntries.length - 1 && <Separator className="my-4" />}
                </React.Fragment>
              ))}
            </div>
          )}
        </ScrollArea>
      </DialogContent>
    </Dialog>
  );
};

export default PostEditHistoryDialog;
